mode<-mode[2]
} else{
mode <- mode[1]
}
mode
oxygen_generator_rating <- input_df
for (i in 1:length(oxygen_generator_rating)) {
mode <- DescTools::Mode(as.numeric(pull(oxygen_generator_rating[,i])))
if(is.na(mode)){
mode <- 1
}else if(length(mode)==2) {
mode<-mode[2]
} else{
mode <- mode[1]
}
oxygen_generator_rating <- oxygen_generator_rating %>%
filter(oxygen_generator_rating[,i] == mode)
if(nrow(oxygen_generator_rating) == 1) {
break
}
}
oxygen_generator_rating <- input_df
oxygen_generator_rating <- input_df
for (i in 1:length(oxygen_generator_rating)) {
mode <- DescTools::Mode(as.numeric(pull(oxygen_generator_rating[,i])))
if(is.na(mode)){
mode <- 1
} else if(length(mode)==2) {
mode<-mode[2]
} else{
mode <- mode[1]
}
oxygen_generator_rating <- oxygen_generator_rating %>%
filter(oxygen_generator_rating[,i] == mode)
if(nrow(oxygen_generator_rating) == 1) {
break
}
}
oxygen_generator_rating %>%
unite(oxygen_generator_rating, sep="") %>%
mutate(oxygen_generator_rating = DescTools::BinToDec(oxygen_generator_rating))
CO2_scrubber_rating <- input_df
for (i in 1:length(CO2_scrubber_rating)) {
mode <- DescTools::Mode(as.numeric(pull(CO2_scrubber_rating[,i])))
if(is.na(mode)){
mode <- 0
} else if(length(mode)==2) {
mode<-mode[1]
} else{
mode <- mode[1]
mode<- if_else(mode == 1, "0", "1")
}
CO2_scrubber_rating <- CO2_scrubber_rating %>%
filter(CO2_scrubber_rating[,i] == anti_mode[i])
if(nrow(CO2_scrubber_rating) == 1) {
break
}
}
oxygen_generator_rating %>%
unite(oxygen_generator_rating, sep="") %>%
mutate(oxygen_generator_rating = DescTools::BinToDec(oxygen_generator_rating)) %>%
bind_cols(CO2_scrubber_rating %>%
unite(CO2_scrubber_rating, sep="") %>%
mutate(CO2_scrubber_rating = DescTools::BinToDec(CO2_scrubber_rating))) %>%
mutate(life_support_rating = oxygen_generator_rating*CO2_scrubber_rating)
CO2_scrubber_rating <- input_df
for (i in 1:length(CO2_scrubber_rating)) {
mode <- DescTools::Mode(as.numeric(pull(CO2_scrubber_rating[,i])))
if(is.na(mode)){
mode <- 0
} else if(length(mode)==2) {
mode<-mode[1]
} else{
mode <- mode[1]
mode<- if_else(mode == 1, "0", "1")
}
CO2_scrubber_rating <- CO2_scrubber_rating %>%
filter(CO2_scrubber_rating[,i] == mode[i])
if(nrow(CO2_scrubber_rating) == 1) {
break
}
}
oxygen_generator_rating %>%
unite(oxygen_generator_rating, sep="") %>%
mutate(oxygen_generator_rating = DescTools::BinToDec(oxygen_generator_rating)) %>%
bind_cols(CO2_scrubber_rating %>%
unite(CO2_scrubber_rating, sep="") %>%
mutate(CO2_scrubber_rating = DescTools::BinToDec(CO2_scrubber_rating))) %>%
mutate(life_support_rating = oxygen_generator_rating*CO2_scrubber_rating)
CO2_scrubber_rating <- input_df
input_df <-  read_tsv("input.txt", show_col_types = FALSE)
input_df <- input_df %>%
separate(input,
into = c("empty","first", "second", "third", "fourth", "fifth", "sixth",
"seventh", "eight", "nineth", "tenth", "eleventh", "twelveth"),
sep = "") %>%
select(-empty)
input_df %>%
summarise(across(everything(), DescTools::Mode)) %>%
unite(gamma_rate, sep="") %>%
mutate(gamma_rate = DescTools::BinToDec(gamma_rate)) %>%
bind_cols(
input_df %>%
summarise(across(everything(), DescTools::Mode)) %>%
mutate(across(everything(), ~if_else(. == "1", "0", "1"))) %>%
unite(epsilon_rate, sep="") %>%
mutate(epsilon_rate = DescTools::BinToDec(epsilon_rate))
) %>%
mutate(power_consumption = gamma_rate*epsilon_rate)
oxygen_generator_rating <- input_df
for (i in 1:length(oxygen_generator_rating)) {
mode <- DescTools::Mode(as.numeric(pull(oxygen_generator_rating[,i])))
if(is.na(mode)){
mode <- 1
} else if(length(mode)==2) {
mode<-mode[2]
} else{
mode <- mode[1]
}
oxygen_generator_rating <- oxygen_generator_rating %>%
filter(oxygen_generator_rating[,i] == mode)
if(nrow(oxygen_generator_rating) == 1) {
break
}
}
oxygen_generator_rating %>%
unite(oxygen_generator_rating, sep="") %>%
mutate(oxygen_generator_rating = DescTools::BinToDec(oxygen_generator_rating))
CO2_scrubber_rating <- input_df
for (i in 1:length(CO2_scrubber_rating)) {
mode <- DescTools::Mode(as.numeric(pull(CO2_scrubber_rating[,i])))
if(is.na(mode)){
mode <- 0
} else if(length(mode)==2) {
mode<-mode[1]
} else{
mode <- mode[1]
mode<- if_else(mode == 1, "0", "1")
}
CO2_scrubber_rating <- CO2_scrubber_rating %>%
filter(CO2_scrubber_rating[,i] == mode[i])
if(nrow(CO2_scrubber_rating) == 1) {
break
}
}
CO2_scrubber_rating <- input_df
for (i in 1:length(CO2_scrubber_rating)) {
mode <- DescTools::Mode(as.numeric(pull(CO2_scrubber_rating[,i])))
if(is.na(mode)){
mode <- 0
} else if(length(mode)==2) {
mode<-mode[1]
} else{
mode <- mode[1]
mode<- if_else(mode == 1, "0", "1")
}
CO2_scrubber_rating <- CO2_scrubber_rating %>%
filter(CO2_scrubber_rating[,i] == mode)
if(nrow(CO2_scrubber_rating) == 1) {
break
}
}
oxygen_generator_rating %>%
unite(oxygen_generator_rating, sep="") %>%
mutate(oxygen_generator_rating = DescTools::BinToDec(oxygen_generator_rating)) %>%
bind_cols(CO2_scrubber_rating %>%
unite(CO2_scrubber_rating, sep="") %>%
mutate(CO2_scrubber_rating = DescTools::BinToDec(CO2_scrubber_rating))) %>%
mutate(life_support_rating = oxygen_generator_rating*CO2_scrubber_rating)
paste0("no", 1:12)
input <- read_lines("dag4.txt")
bingo_numbers <- input[1] %>% str_split(",") %>% .[[1]] %>% as.numeric()
view(bingo_numbers)
tail(input, -2)
tail(input, -2) %>%
.[. != ""]
tail(input, -2) %>%
.[. != ""] %>%
tibble(x = .)
tail(input, -2) %>%
.[. != ""] %>%
tibble(x = .) %>%
mutate(row_id = rep(1:5, nrow(.)/5))
tail(input, -2) %>%
.[. != ""] %>%
tibble(x = .) %>%
mutate(row_id = rep(1:5, nrow(.)/5)) %>%
mutate(sheet_id = rep(1:(nrow(.)/5), each = 5))
tail(input, -2) %>%
.[. != ""] %>%
tibble(x = .) %>%
mutate(row_id = rep(1:5, nrow(.)/5)) %>%
mutate(sheet_id = rep(1:(nrow(.)/5), each = 5)) %>%
separate_rows(x, convert = TRUE)
tail(input, -2) %>%
.[. != ""] %>%
tibble(x = .) %>%
mutate(row_id = rep(1:5, nrow(.)/5)) %>%
mutate(sheet_id = rep(1:(nrow(.)/5), each = 5)) %>%
separate_rows(x, convert = TRUE) %>%
filter(!is.na(x)) %>%
mutate(col_id = rep(1:5, nrow(.)/5))
bingo_sheets %>%
rowwise() %>%
mutate(idx = which(bingo_numbers == x))
bingo_sheets <- tail(input, -2) %>%
.[. != ""] %>%
tibble(x = .) %>%
mutate(row_id = rep(1:5, nrow(.)/5)) %>%
mutate(sheet_id = rep(1:(nrow(.)/5), each = 5)) %>%
separate_rows(x, convert = TRUE) %>%
filter(!is.na(x)) %>%
mutate(col_id = rep(1:5, nrow(.)/5))
bingo_sheets %>%
rowwise() %>%
mutate(idx = which(bingo_numbers == x))
sheet_wins <- bingo_sheets %>%
rowwise() %>%
mutate(idx = which(bingo_numbers == x)) %>%
group_by(sheet_id, row_id) %>%
mutate(row_wins_at = max(idx))
bingo_sheets %>%
rowwise() %>%
mutate(idx = which(bingo_numbers == x)) %>%
group_by(sheet_id, row_id) %>%
mutate(row_wins_at = max(idx))
bingo_sheets %>%
rowwise() %>%
mutate(idx = which(bingo_numbers == x)) %>%
group_by(sheet_id, row_id) %>%
mutate(row_wins_at = max(idx)) %>%
group_by(sheet_id, col_id)
bingo_sheets %>%
rowwise() %>%
mutate(idx = which(bingo_numbers == x)) %>%
group_by(sheet_id, row_id) %>%
mutate(row_wins_at = max(idx)) %>%
group_by(sheet_id, col_id) %>%
mutate(col_wins_at = max(idx))
bingo_sheets %>%
rowwise() %>%
mutate(idx = which(bingo_numbers == x)) %>%
group_by(sheet_id, row_id) %>%
mutate(row_wins_at = max(idx)) %>%
group_by(sheet_id, col_id) %>%
mutate(col_wins_at = max(idx)) %>%
group_by(sheet_id) %>%
mutate(sheet_wins_at = min(min(row_wins_at, na.rm = TRUE), min(col_wins_at, na.rm = TRUE), na.rm = TRUE)) %>%
ungroup()
View(bingo_sheets)
bingo_sheets %>%
rowwise() %>%
mutate(idx = which(bingo_numbers == x))
bingo_numbers[17]
bingo_sheets %>%
rowwise() %>%
mutate(idx = which(bingo_numbers == x)) %>%
group_by(sheet_id, row_id) %>%
mutate(row_wins_at = max(idx))
bingo_sheets %>%
rowwise() %>%
mutate(idx = which(bingo_numbers == x)) %>%
group_by(sheet_id, row_id) %>%
mutate(row_wins_at = max(idx)) %>%
group_by(sheet_id, col_id) %>%
mutate(col_wins_at = max(idx))
input <- readLines("dag4.txt")
read_matrix <- function(lines, sep = "", type = identity) {
lines <- stringr::str_trim(lines)
tokens <- strsplit(lines, sep)
token_lengths <- lengths(tokens)
res <- matrix(nrow = length(lines), ncol = max(token_lengths))
for (i in seq_along(lines)) {
res[i, seq_len(token_lengths[i])] <- type(tokens[[i]])
}
res
}
numbers <- strsplit(input[1], ",")[[1]] |> as.integer()
boards <- purrr::map(
0:99,
~ read_matrix(input[3:7 + 6 * .x], "\\s+", type = as.integer)
)
View(boards)
boards[1]
matrix(boards[1] %in% numbers[seq_len(1)], nrow = 5)
matrix(boards[1] %in% numbers[seq_len(2)], nrow = 5)
matrix(boards[1] %in% numbers[seq_len(3)], nrow = 5)
matrix(boards[1] %in% numbers[seq_len(4)], nrow = 5)
matrix(boards[1] %in% numbers[seq_len(5)], nrow = 5)
matrix(boards[1] %in% numbers[seq_len(6)], nrow = 5)
matrix(boards[1] %in% numbers[seq_len(7)], nrow = 5)
matrix(boards[1] %in% numbers[seq_len(12)], nrow = 5)
matrix(boards[1] %in% numbers[seq_len(99)], nrow = 5)
check_board <- function(board) {
for (i in seq_along(numbers)) {
matched <- matrix(board %in% numbers[seq_len(i)], nrow = 5)
row_checks <- apply(matched, MARGIN = 1, prod)
col_checks <- apply(matched, MARGIN = 1, prod)
if (any(c(row_checks, col_checks) == 1)) break
}
i
}
win_times <- purrr::map_int(boards, check_board)
purrr::map_int(boards, check_board)
for (i in seq_along(numbers)) {
matched <- matrix(boards %in% numbers[seq_len(i)], nrow = 5)
row_checks <- apply(matched, MARGIN = 1, prod)
col_checks <- apply(matched, MARGIN = 1, prod)
if (any(c(row_checks, col_checks) == 1)) break
}
for (i in seq_along(numbers)) {
matched <- matrix(boards[1] %in% numbers[seq_len(i)], nrow = 5)
row_checks <- apply(matched, MARGIN = 1, prod)
col_checks <- apply(matched, MARGIN = 1, prod)
if (any(c(row_checks, col_checks) == 1)) break
}
i
matrix(boards[1] %in% numbers[seq_len(100)], nrow = 5)
seq_along(numbers)
matrix(boards[1])
matrix(boards[1], nrow = 5)
View(boards)
matrix(boards[[1]], nrow = 5)
matrix(boards[[1]] %in% numbers[seq_len(99)], nrow = 5)
matrix(boards[[1]] %in% numbers[seq_len(1)], nrow = 5)
matrix(boards[[1]] %in% numbers[seq_len(2)], nrow = 5)
matrix(boards[[1]] %in% numbers[seq_len(7)], nrow = 5)
numbers[seq_len(7)]
matched <- matrix(boards[[1]] %in% numbers[seq_len(7)], nrow = 5)
apply(matched, MARGIN = 1, prod)
matrix(boards[[1]] %in% numbers[seq_len(50)], nrow = 5)
matched <- matrix(boards[[1]] %in% numbers[seq_len(50)], nrow = 5)
apply(matched, MARGIN = 1, prod)
apply(matched, MARGIN = 1, prod)
apply(matched, MARGIN = 2, prod)
row_checks <- apply(matched, MARGIN = 1, prod)
col_checks <- apply(matched, MARGIN = 2, prod)
any(c(row_checks, col_checks) == 1)
col_checks <- apply(matched, MARGIN = 1, prod)
any(c(row_checks, col_checks) == 1)
check_board <- function(board) {
for (i in seq_along(numbers)) {
matched <- matrix(board %in% numbers[seq_len(i)], nrow = 5)
row_checks <- apply(matched, MARGIN = 1, prod)
col_checks <- apply(matched, MARGIN = 2, prod)
if (any(c(row_checks, col_checks) == 1)) break
}
i
}
win_times <- purrr::map_int(boards, check_board)
fastest_time <- min(win_times)
View(boards)
fastest_board <- boards[[which(win_times == fastest_time)]]
View(fastest_board)
sum(setdiff(fastest_board, numbers[seq_len(fastest_time)])) *
numbers[fastest_time]
slowest_time <- max(win_times)
slowest_board <- boards[[which(win_times == slowest_time)]]
sum(setdiff(slowest_board, numbers[seq_len(slowest_time)])) *
numbers[slowest_time]
readLines("day5")
x <- readLines("day5") %>%
input <- readLines("day5") %>%
input <- readLines("day5")
input <- readLines("day5")
tibble(x=input)
tibble(x=input) %>%
extract(x,
c("x1", "y1", "x2", "y2"),
"(\\d+),(\\d+) -> ")
tibble(x=input) %>%
extract(x,
c("x1", "y1", "x2", "y2"),
"(\\d+),(\\d+) -> (\\d+),(\\d+)")
mutate(x = map2(x1, x2, seq))
tibble(x=input) %>%
extract(x,
c("x1", "y1", "x2", "y2"),
"(\\d+),(\\d+) -> (\\d+),(\\d+)") %>%
mutate(x = map2(x1, x2, seq))
tibble(x=input) %>%
extract(x,
c("x1", "y1", "x2", "y2"),
"(\\d+),(\\d+) -> (\\d+),(\\d+)") %>%
mutate(x = map2(x1, x2, seq),
y = map2(y1, y2, seq))
data <- tibble(x=input) %>%
extract(x,
c("x1", "y1", "x2", "y2"),
"(\\d+),(\\d+) -> (\\d+),(\\d+)") %>%
mutate(x = map2(x1, x2, seq),
y = map2(y1, y2, seq))
data
data %>%
filter(x1 == x2 | y1 == y2)
data %>%
filter(x1 == x2 | y1 == y2) %>%
unnest(x)
data %>%
filter(x1 == x2 | y1 == y2) %>%
unnest(x) %>%
unnest(y)
horizontal_vertical <- data %>%
filter(x1 == x2 | y1 == y2) %>%
unnest(x) %>%
unnest(y)
horizontal_vertical %>%
count(x,y)
horizontal_vertical %>%
count(x,y) %>%
summarise(sum(n>1))
input %>%  separate(c("x1", "y1", "x2", "y2"))
input %>%  separate(c("x1", "y1", "x2", "y2"), convert = T)
tibble(x=input %>% separate(x, c("x1", "y1", "x2", "y2"), convert = T)
tibble(x=input) %>%
separate(x, c("x1", "y1", "x2", "y2"), convert = T)
remotes::install_github("tanho63/aoc.elf")
aoc.elf::aoc_cookie_set(cookie = "session: 53616c7465645f5fc9ad27b051d4096f9bda1288cf51d33d1499bb894a1a080e7e6ae03a6555be9a1e42914a40273a84")
aoc.elf::aoc_get(5)
aoc.elf::aoc_cookie_set(cookie = "53616c7465645f5fc9ad27b051d4096f9bda1288cf51d33d1499bb894a1a080e7e6ae03a6555be9a1e42914a40273a84")
aoc.elf::aoc_get(5)
aoc.elf::aoc_init(5)
suppressPackageStartupMessages({
library(tidyverse)
library(here)
library(glue)
knitr::opts_chunk$set(echo = TRUE)
})
options(scipen = 9999999)
options(dplyr.summarise.inform = FALSE)
tibble(x = input) %>%
separate(x, c("x1", "y1", "x2", "y2"))
tibble(x = input) %>%
separate(x, c("x1", "y1", "x2", "y2")) %>%
mutate(x = map2(x1, x2, seq),
y = map2(y1, y2))
tibble(x = input) %>%
separate(x, c("x1", "y1", "x2", "y2")) %>%
mutate(x = map2(x1, x2, seq),
y = map2(y1, y2, seq))
coordinates <- tibble(x = input) %>%
separate(x, c("x1", "y1", "x2", "y2")) %>%
mutate(x = map2(x1, x2, seq),
y = map2(y1, y2, seq))
coordinates %>%
unnest(x) %>%
unnest(y)
coordinates %>%
filter(x1 == x2 | y1 == y2) %>%
unnest(x) %>%
unnest(y)
data <- tibble(x = input) %>%
separate(x, c("x1", "y1", "x2", "y2")) %>%
mutate(x = map2(x1, x2, seq),
y = map2(y1, y2, seq))
coordinates <- data %>%
filter(x1 == x2 | y1 == y2) %>%
unnest(x) %>%
unnest(y)
coordinates %>% count(x,y) %>% summarise(sum(n>1))
data %>%
filter(x1 == x2 | y1 == y2) %>%
unnest(x,y)
data %>%
filter(x1 == x2 | y1 == y2) %>%
unnest(x,y) %>%
bind_rows(coordinates) %>%
count(x,y) %>% summarise(sum(n>1))
data %>%
filter(!(x1 == x2 | y1 == y2)) %>%
unnest(x,y) %>%
bind_rows(coordinates) %>%
count(x,y) %>% summarise(sum(n>1))
coordinates %>%
count(x,y) |>
summarise(sum(n>1))
R.version
aoc.elf::aoc_init(6)
suppressPackageStartupMessages({
library(tidyverse)
library(here)
library(glue)
knitr::opts_chunk$set(echo = TRUE)
})
options(scipen = 9999999)
options(dplyr.summarise.inform = FALSE)
aoc.elf::aoc_get(6)
aoc.elf::aoc_cookie()
aoc.elf::aoc_cookie_set("53616c7465645f5fe3b96261c91bda2b744138cb587de707881a40a3d325d868e614974e49224a629945134764ddd98a")
aoc.elf::aoc_get(6)
input <- readLines(here::here("2021/day-06-input.txt"))
aoc.elf::aoc_get(6)
input <- readLines(here::here("2021/day-06-input.txt"))
getwd()
aoc.elf::aoc_init(6)
aoc.elf::aoc_init(6)
aoc.elf::aoc_init(6)
aoc.elf::aoc_get(6)
input <- readLines(here::here("2021/day-06-input.txt"))
input <- readLines(here::here("2021","/day-06-input.txt"))
input <- readLines(here::here("2021","day-06-input.txt"))
aoc.elf::aoc_get(5)
suppressPackageStartupMessages({
library(tidyverse)
library(here)
library(glue)
knitr::opts_chunk$set(echo = TRUE)
})
options(scipen = 9999999)
options(dplyr.summarise.inform = FALSE)
input <- readLines(here::here("2021/day-05-input.txt"))
getwd()
